// 원시 타입, 객체 타입

// 객체 타입 주의사항: 1. 의도치 않게 값이 수정될 수 있다

/*
let o1 = { name: "박예은" };
let o2 = o1; -> 얕은 복사
o2.name = "홍길동";
-> x, 이렇게 하면 의도치 않게 원본 객체 값이 수정될 수 있다
*/

let o1 = { name: "박예은" };
let o2 = {...o1 }; // -> 깊은 복사
o2.name = "홍길동";
// -> o, 이렇게 해줘야 원본 객체의 수정 없이 객체의 값을 수정할 수 있다.

// 객체 타입 주의사항: 2. 객체 간의 비교는 기본적으로 참조값을 기준으로 이루어진다
// let o1 = { name: "박예은" };
// let o2 = o1;
// let o3 - {...o1 }

// console.log(o1 === o2); // -> 얕은 비교 (참조값을 기준으로 비교)
// console.log(o1 === o3); // false

console.log(JSON.stringify(o1) === JSON.stringify(o3)); // true // -> 깊은 비교 (객체를 문자열로 변환하여 비교)

// * JSON.stringify() 는 자바스크립트의 내장 함수로, 객체를 문자열로 변환하는 기능을 한다

// 객체 타입 주의사항: 3. 배열과 함수도 사실 객체이다
// -> 객체 object 내에 함수 function과 배열 array가 존재